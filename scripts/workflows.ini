
test_type = "PR tests"
checkpoint_tests = 1
checkpoint_examples = 1
checkpoint_mpi = 1
checkpoint_warnings_as_errors = 1
checkpoint_docs = 0
checkpoint_asan = 1
checkpoint_ubsan = 0
checkpoint_serialization_error_checking = 1
build_type = release

ulimit_core = 0
code_coverage = 0
repo = lifflander1/checkpoint
arch = amd64
is_ubuntu = 1
distro = 18.04
linux = ubuntu
cache_dir = "~/.local/cache/"
cache_name = "[% linux %]-[% compiler %]-cache"
docker_target = "[% linux %]-cpp"
triggers = "on:\\n  push:\\n    branches:\\n      - develop\\n      - 1.*\\n  pull_request:"
warning = "###############################################################################\\n############## Warning this is a generated file---do not modify ###############\\n###############################################################################"
job_name = build
workflow_runs_on = ubuntu-latest
build_root = "~/.local/cache/${{ env.ARCH }}-[% linux %]-${{ env.UBUNTU }}-${{ env.COMPILER }}-cache/"
linux_env = "      UBUNTU: [% distro %]"

[PR-tests-gcc-8]
test_configuration = "gcc-8, ubuntu, mpich, address sanitizer"
compiler_type = gnu
compiler = gcc-8
output_name = .github/workflows/dockerimage-gcc-8-ubuntu-mpich.yml

[PR-tests-gcc-9]
test_configuration = "gcc-9, ubuntu, mpich"
compiler_type = gnu
compiler = gcc-9
output_name = .github/workflows/dockerimage-gcc-9-ubuntu-mpich.yml
distro = 20.04
code_coverage = 1
checkpoint_serialization_error_checking = 0

[PR-tests-gcc-10]
test_configuration = "gcc-10, ubuntu, mpich"
compiler_type = gnu
compiler = gcc-10
output_name = .github/workflows/dockerimage-gcc-10-ubuntu-mpich.yml
distro = 20.04

[PR-tests-clang-5]
test_configuration = "clang-5.0, ubuntu, mpich"
compiler_type = clang
compiler = clang-5.0
output_name = .github/workflows/dockerimage-clang-5.0-ubuntu-mpich.yml

[PR-tests-clang-6]
test_configuration = "clang-6.0, ubuntu, mpich"
compiler_type = clang
compiler = clang-6.0
output_name = .github/workflows/dockerimage-clang-6.0-ubuntu-mpich.yml

[PR-tests-clang-7]
test_configuration = "clang-7, ubuntu, mpich"
compiler_type = clang
compiler = clang-7
output_name = .github/workflows/dockerimage-clang-7-ubuntu-mpich.yml

[PR-tests-clang-8]
test_configuration = "clang-8, ubuntu, mpich"
compiler_type = clang
compiler = clang-8
output_name = .github/workflows/dockerimage-clang-8-ubuntu-mpich.yml
checkpoint_asan = 0
checkpoint_ubsan = 1

[PR-tests-clang-9]
test_configuration = "clang-9, ubuntu, mpich"
compiler_type = clang
compiler = clang-9
output_name = .github/workflows/dockerimage-clang-9-ubuntu-mpich.yml

[PR-tests-clang-10]
test_configuration = "clang-10, ubuntu, mpich"
compiler_type = clang
compiler = clang-10
output_name = .github/workflows/dockerimage-clang-10-ubuntu-mpich.yml
distro = 20.04

[PR-tests-clang-11]
test_configuration = "clang-11, ubuntu, mpich"
compiler_type = clang
compiler = clang-11
output_name = .github/workflows/dockerimage-clang-11-ubuntu-mpich.yml
distro = 20.04

[PR-tests-nvidia-10]
test_configuration = "nvcc-10.1, ubuntu, mpich"
compiler_type = nvidia
compiler = nvcc-10
output_name = .github/workflows/dockerimage-nvcc-10-ubuntu-mpich.yml
checkpoint_asan = 0
checkpoint_serialization_error_checking = 0

[PR-tests-nvidia-11]
test_configuration = "nvcc-11.0, ubuntu, mpich"
compiler_type = nvidia
compiler = nvcc-11
output_name = .github/workflows/dockerimage-nvcc-11-ubuntu-mpich.yml
checkpoint_asan = 0
checkpoint_serialization_error_checking = 0
