###############################################################################
############## Warning this is a generated file---do not modify ###############
###############################################################################

name: PR tests (clang-10, ubuntu, mpich)

on:
  push:
    branches:
      - develop
      - 1.*
  pull_request:

jobs:

  build:

    runs-on: ubuntu-latest

    env:
      REPO: lifflander1/checkpoint
      ARCH: amd64
      UBUNTU: 20.04
      COMPILER_TYPE: clang
      COMPILER: clang-10
      BUILD_TYPE: release
      ULIMIT_CORE: 0
      CODE_COVERAGE: 0
      MAGISTRATE_TESTS: 1
      MAGISTRATE_EXAMPLES: 1
      MAGISTRATE_MPI: 1
      MAGISTRATE_WARNINGS_AS_ERRORS: 1
      MAGISTRATE_DOCS: 0
      MAGISTRATE_ASAN: 1
      MAGISTRATE_UBSAN: 0
      MAGISTRATE_SERIALIZATION_ERROR_CHECKING: 1
      CACHE: ~/.local/cache/

    steps:
    - name: Setup Build Root
      run: |
        echo "BUILD_ROOT=~/.local/cache/${{ env.ARCH }}-ubuntu-${{ env.UBUNTU }}-${{ env.COMPILER }}-cache" >> $GITHUB_ENV
    - name: Prepare caching timestamp
      run: |
        echo "timestamp=$(TZ=UTC date +"%Y-%m-%d-%H;%M;%S")" >> $GITHUB_ENV
    - uses: actions/cache@v4
      env:
        cache-name: ubuntu-clang-10-cache
      with:
        path: ${{ env.BUILD_ROOT }}/ccache
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ env.timestamp }}
        restore-keys: |
          ${{ runner.os }}-${{ env.cache-name }}-
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Prepare the base Docker image
      shell: bash
      run: $(./scripts/check_containers.sh) ubuntu-cpp
    - name: Build the Docker image
      run: docker compose run ubuntu-cpp
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    - name: Docker Push Base Image
      if: ${{ success() && github.ref == 'refs/heads/develop' }}
      continue-on-error: true
      shell: bash
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} \
                     -p ${{ secrets.DOCKER_PASSWORD }}
        docker-compose push ubuntu-cpp
    - name: Zip up CMake output
      run: |
        zip -j LastTest.log.gz ${{ env.BUILD_ROOT }}/checkpoint/Testing/Temporary/LastTest.log
        zip -j cmake-output.log.gz ${{ env.BUILD_ROOT }}/checkpoint/cmake-output.log
    - uses: actions/upload-artifact@v4
      with:
        name: CMake test output
        path: cmake-output.log.gz
    - uses: actions/upload-artifact@v4
      with:
        name: CMake full output
        path: LastTest.log.gz
